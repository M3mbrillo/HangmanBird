//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HangmanBird.model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HangmanBirdEntities : DbContext
    {
        public HangmanBirdEntities()
            : base("name=HangmanBirdEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Deletreo_Palabras> Deletreo_Palabras { get; set; }
        public virtual DbSet<Palabras> Palabras { get; set; }
        public virtual DbSet<Repeticion_Letras> Repeticion_Letras { get; set; }
    
        public virtual ObjectResult<sp_ObtenerLetrasPredilectas_result> sp_ObtenerLetrasPredilectas(string palabra, string letras, Nullable<int> cantidadLetras, Nullable<double> tolerancia)
        {
            var palabraParameter = palabra != null ?
                new ObjectParameter("Palabra", palabra) :
                new ObjectParameter("Palabra", typeof(string));
    
            var letrasParameter = letras != null ?
                new ObjectParameter("Letras", letras) :
                new ObjectParameter("Letras", typeof(string));
    
            var cantidadLetrasParameter = cantidadLetras.HasValue ?
                new ObjectParameter("CantidadLetras", cantidadLetras) :
                new ObjectParameter("CantidadLetras", typeof(int));
    
            var toleranciaParameter = tolerancia.HasValue ?
                new ObjectParameter("Tolerancia", tolerancia) :
                new ObjectParameter("Tolerancia", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerLetrasPredilectas_result>("sp_ObtenerLetrasPredilectas", palabraParameter, letrasParameter, cantidadLetrasParameter, toleranciaParameter);
        }
    }
}
